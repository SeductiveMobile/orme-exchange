version: '2.1'
services:
  postgres:
    image: 'postgres:alpine'
    volumes:
      - ${PWD-.}/data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      PGDATA: /tmp
    ports:
      - '5432:5432'

  redis:
    image: 'redis:alpine'
    volumes:
      - ${PWD-.}/data/redis:/data
    ports:
      - '6379:6379'

#   ethnode:
#     image: ethereum/client-go:alpine
#     volumes:
# #      - ${PWD-.}/data/ethereum:/root/.ethereum
#       - ${PWD-.}/config/ethereum/dev/password:/root/files/password:ro
#       - ${PWD-.}/config/ethereum/dev/genesis.json:/root/files/genesis.json:ro
#       - ${PWD-.}/config/ethereum/dev/keystore:/root/.ethereum/devchain/keystore:rw
#     command:
#       --datadir=/root/.ethereum/devchain
#       --nodekeyhex=091bd6067cb4612df85d9c1ff85cc47f259ced4d4cd99816b14f35650f59c322
#       --rpcapi "db,personal,eth,net,web3"
#       --rpccorsdomain='*'
#       --networkid=0
#       --rpc
#       --rpcaddr="0.0.0.0"
#       --etherbase '0x1ebd93ff2fc90b873a68e16b931a7c66e2237e31'
#       --mine
#       --nodiscover
#       --maxpeers 0
#       --dev
#       init=/root/files/genesis.json
# #      --fast --cache=512 --rpc --rpcaddr '0.0.0.0' --testnet
#     environment:
#       APP_ENV: development
#     ports:
#       - "8545:8545"
#       - "30303:30303/udp"
#       - "30303:30303"

  bootstrap:
    build: monitored-geth-client
    restart: on-failure
    container_name: bootstrap
    hostname: bootstrap
    links:
      - netstats
    entrypoint: /root/start.sh
    command: '--datadir=~/.ethereum/devchain --nodekeyhex=091bd6067cb4612df85d9c1ff85cc47f259ced4d4cd99816b14f35650f59c322 --rpcapi "db,personal,eth,net,web3" --rpccorsdomain="*" --networkid=456719 --rpc --rpcaddr="0.0.0.0"'
    volumes:
      - ${PWD-.}/config/ethereum/dev/password:/root/files/password:ro
      - ${PWD-.}/config/ethereum/dev/genesis.json:/root/files/genesis.json:ro
      - ${PWD-.}/config/ethereum/dev/keystore:/root/.ethereum/devchain/keystore:rw
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "30303:30303"
      - "30303:30303/udp"
      - "8545:8545"
  eth:
    build: monitored-geth-client
    restart: on-failure
    links:
      - bootstrap
      - netstats
    entrypoint: /root/start.sh
    volumes:
      - ${PWD-.}/config/ethereum/dev/password:/root/files/password:ro
      - ${PWD-.}/config/ethereum/dev/genesis.json:/root/files/genesis.json:ro
      - ${PWD-.}/config/ethereum/dev/keystore:/root/.ethereum/devchain/keystore:rw
      - /etc/localtime:/etc/localtime:ro
    command: '--datadir=~/.ethereum/devchain --rpccorsdomain="*" --networkid=456719 --rpc --bootnodes="enode://288b97262895b1c7ec61cf314c2e2004407d0a5dc77566877aad1f2a36659c8b698f4b56fd06c4a0c0bf007b4cfb3e7122d907da3b005fa90e724441902eb19e@XXX:30303"'
  netstats:
    build: eth-netstats
    restart: on-failure
    container_name: netstats
    environment:
      - WS_SECRET=eth-net-stats-secret
    volumes:
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"

  btcnode:
    image: ruimarinho/bitcoin-core:0.15-alpine
    volumes:
      - ${PWD-.}/data/bitcoin:/home/bitcoin/data
#      - ${PWD-.}/config/bitcoin/dev/bitcoin.conf:/root/.bitcoin/bitcoin.conf:ro
    command:
      -printtoconsole
      -server=1
      -regtest=1
      -rpcuser=myuser
      -rpcpassword=mypassword
      -rpcallowip=0.0.0.0/0
      -rpcallowip=::/0
      -rpcbind=0.0.0.0
    environment:
      BITCOIN_DATA: "/home/bitcoin/data"
    ports:
      - "8332:8332"
      - "8333:8333"
      - "18332:18332"
      - "18333:18333"
      - "18444:18444"

  app:
    extends:
      file: docker-compose-common.yml
      service: pyapp
    command: flask run --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - btcnode
      - contracts
      - bootstrap
      - app_setup

  app_setup:
    extends:
      file: docker-compose-common.yml
      service: pyapp
    command: /bin/sh bin/migrate.sh
    depends_on:
      - postgres
      - redis
      - btcnode
      - contracts
      - bootstrap

  # TODO: Separate Celery and Celery Beat into separate containers
  # TODO: http://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html
  worker:
    extends:
      file: docker-compose-common.yml
      service: pyapp
    command: celery -A orme worker -B -l info
    depends_on:
      - postgres
      - redis
      - btcnode
      - contracts
      - bootstrap
      - app_setup

  testrpc: # A very simple/light geth, only for testing purpose
    container_name: testrpc
    image: desmart/testrpc:latest
    ports:
      - "8546:8545"
    command: '--debug --account="0xaa73b5c98e60d589e71ce7cff59c02f82e12c7ce676ee356da8e058a285ccd61,12345678901234567891234567890123456789123" --account="0x52f3a1fa15405e1d5a68d7774ca45c7a3c7373a66c3c44db94a7f99a22c14d28,12345678901234567891234567890123456789123"'

  contracts:
    build: ./contracts
    volumes:
      - ${PWD-.}/contracts:/dapp
    environment:
      # ETHEREUM_NETWORK: 'development'
      ETHEREUM_NETWORK: 'testrpc'
      # ETHEREUM_RPC_HOST: "bootstrap"
      ETHEREUM_RPC_HOST: "testrpc"
      ETHEREUM_RPC_PORT: 8545
      # ETHEREUM_DEPLOYER_ADDRESS: "0x1ebd93ff2fc90b873a68e16b931a7c66e2237e31"
      ETHEREUM_DEPLOYER_ADDRESS: "0x22ddfe3c6439839edf8e2e56126c65c5fc5a2f40"
      # ETHEREUM_DEPLOYER_PASSPHRASE: "nopassphrase"
      ETHEREUM_DEPLOYER_PASSPHRASE: "17Fusion"
      ETHEREUM_UNLOCK_DURATION: 1800
    ports:
      - "8080:8080"
      - "7000:7000"
    depends_on:
      # - ethnode
      - bootstrap
      - testrpc